# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Build and deploy archive for HUGO

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - hugo

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  actions: write
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  trigger-main-workflow:
    runs-on: ubuntu-22.04
    steps:
      - name: Dispatch event to main branch
        uses: benc-uk/workflow-dispatch@v1
        with:
          ref: master
          workflow: share.yml
          token: ${{ secrets.GITHUB_TOKEN }}

  deploy-vps-docs:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: docsify
          submodules: recursive
          fetch-depth: 0
      - name: Update submodule
        run: |
          git submodule update  --init --recursive --remote
      
      - name: Deploy to vps docs step
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          ARGS: "-avz --delete"
          EXCLUDE: "/.git/, /.github/"
          SOURCE: "./"
          REMOTE_HOST: "wtfu.site"
          SSH_PRIVATE_KEY: ${{ secrets.DOCS_ACCESS_TOKEN }}
          REMOTE_PORT: ${{ secrets.DOCS_REMOTE_PORT }}
          REMOTE_USER: ${{ secrets.DOCS_USER }}
          TARGET: ${{ secrets.DOCS_TARGET_DIR_DOCSIFY }}

  deploy-static-for-items:
    environment:
      name: vps
    runs-on: ubuntu-22.04
    needs: trigger-main-workflow
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: hugo
          submodules: recursive
          fetch-depth: 0
      - name: Update submodule
        run: |
          git submodule update  --init --recursive --remote
      - name: Cache Hugo binary
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/hugo
          key: hugo-binary-${{ runner.os }}-${{ hashFiles('./go.sum') }}
          fail-on-cache-miss: true
        
      # ===================================================================
      # build with hugo for tech vps
      # ===================================================================
      - name: Build with Hugo for tech
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Asia/Shanghai
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://tech.wtfu.site"
      - name: Deploy to tech vps step
        uses: easingthemes/ssh-deploy@v5.1.0
        env:
          ARGS: "-avz --delete"
          # EXCLUDE: "/.git/, /.github/"
          SOURCE: "./public/"
          REMOTE_HOST: "wtfu.site"
          SSH_PRIVATE_KEY: ${{ secrets.DOCS_ACCESS_TOKEN }}
          REMOTE_PORT: ${{ secrets.DOCS_REMOTE_PORT }}
          REMOTE_USER: ${{ secrets.DOCS_USER }}
          TARGET: ${{ secrets.DOCS_TARGET_DIR_HUGO }}

      # ===================================================================
      # build with hugo for vercel app
      # ===================================================================
      - name: Build with Hugo for vercel app
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Asia/Shanghai
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://archive-pied.vercel.app"
      - name: Deploy to vercel app step
        uses: amondnet/vercel-action@v25
        with:
          # github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          working-directory: ./public

      # ===================================================================
      # build with hugo for cloudflare pages
      #     https://developers.cloudflare.com/pages/how-to/use-direct-upload-with-continuous-integration/#use-github-actions
      #     https://developers.cloudflare.com/pages/configuration/git-integration/#disable-automatic-deployments
      # ===================================================================
      - name: Build with Hugo for cloudflare pages
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Asia/Shanghai
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://archive-dsr.pages.dev"
      - name: Deploy to cloudflare pages step
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy ./public --project-name=archive
          # Optional: Enable this if you want to have GitHub Deployments triggered
          # gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        
      # ===================================================================
      # build with hugo for netlify app
      # ===================================================================
      - name: Build with Hugo for netlify app
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Asia/Shanghai
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "https://archive-w.netlify.app"
      - name: Deploy to netlify app step
        uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          # NETLIFY_DEPLOY_MESSAGE: "Deployed from GitHub action"
          NETLIFY_DEPLOY_TO_PROD: true
          install_command: "echo Skipping installing the dependencies"
          # resolve hidden folder via `build_command`
          #   https://answers.netlify.com/t/netlify-deploy-api-removes-files-and-directories-beginning-with-a-period/37728
          #   https://github.com/netlify/cli/issues/11#issuecomment-416386934
          build_command: "echo '/.images/* /dotimages/:splat 200!' > ./public/_redirects && mv ./public/.images ./public/dotimages"
          build_directory: "./public"

  # Build job
  build-all-gh-pages:
    runs-on: ubuntu-22.04
    needs: trigger-main-workflow
    steps:
      - name: Cache Hugo binary
        id: cache-hugo-binary
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/hugo
          key: hugo-binary-${{ runner.os }}-${{ hashFiles('./go.sum') }}
          fail-on-cache-miss: true
      # 启用 github pages，获取和设置 metadata，比如 base_url
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Checkout hugo branch
        uses: actions/checkout@v4
        with:
          ref: hugo
          submodules: recursive
          fetch-depth: 0
      - name: Update submodule
        run: |
          git submodule update  --init --recursive --remote

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: Asia/Shanghai
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/hugo"
  
      - name: Put hugo to temp subdir
        run: |
          mkdir -p hugo ${{ runner.temp }}/content  && mv public hugo && mv hugo/public hugo/hugo && mv hugo/hugo ${{ runner.temp }}/content
 
      - name: Checkout docsify branch
        uses: actions/checkout@v4
        with:
          ref: docsify
          submodules: recursive
          fetch-depth: 0
      - name: Update submodule
        run: |
          git submodule update  --init --recursive --remote

      - name: Put docsify to temp subdir
        run: |
          mkdir -p docsify/docsify && mv .images dist docs _sidebar.md .nojekyll index.html README.md LICENSE docsify/docsify/ && mv docsify/docsify ${{ runner.temp }}/content

      - name: Put index.html to temp subdir
        run: |
          echo '<!DOCTYPE html><html lang="en"><body><a href="./hugo/">hugo</a><br><br><a href="./docsify/#/">docsify</a></body></html>' > ${{ runner.temp }}/content/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ runner.temp }}/content

  # Deployment job
  deploy-all-gh-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-22.04
    needs: build-all-gh-pages
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4